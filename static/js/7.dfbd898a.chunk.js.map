{"version":3,"sources":["components/Resume/Education/Degree.js","components/Resume/Education.js","components/Resume/Experience.js","components/Resume/Courses/Course.js","components/Resume/Courses.js","components/Resume/Services.js","data/resume/courses.js","data/resume/degrees.js","data/resume/positions.js","data/resume/services.js","pages/Resume.js","components/Resume/Experience/Job.js"],"names":["Degree","data","className","degree","href","link","school","year","Education","id","map","defaultProps","Experience","job","Job","company","Course","last","number","title","Courses","courses","sort","a","b","ret","university","course","idx","length","Services","degrees","positions","position","daterange","points","services","sections","Resume","Main","description","data-testid","to","sec","toLowerCase","point"],"mappings":"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","file":"static/js/7.dfbd898a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Degree = ({ data }) => (\n  <article className=\"degree-container\">\n    <header>\n      <h4 className=\"degree\">{data.degree}</h4>\n      <h5 className=\"school\"><a href={data.link}>{data.school}</a>, {data.year}</h5>\n      <h4 className=\"school\">Thesis Advisors: Zachary G. Ives, Dan Roth.</h4>\n      <h4 className=\"school\">Thesis Committee: Fernando Pereira, Chris Callison-burch, Andrew Head, Boon Thau Loo.</h4>\n    </header>\n  </article>\n);\n\nDegree.propTypes = {\n  data: PropTypes.shape({\n    degree: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    school: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Degree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Degree from './Education/Degree';\n\nconst Education = ({ data }) => (\n  <div className=\"education\">\n    <div className=\"link-to\" id=\"education\" />\n    <div className=\"title\">\n      <h3>Education</h3>\n    </div>\n    {data.map((degree) => (\n      <Degree\n        data={degree}\n        key={degree.school}\n      />\n    ))}\n  </div>\n);\n\nEducation.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    school: PropTypes.string,\n    degree: PropTypes.string,\n    link: PropTypes.string,\n    year: PropTypes.number,\n  })),\n};\n\nEducation.defaultProps = {\n  data: [],\n};\n\nexport default Education;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Job from './Experience/Job';\n\nconst Experience = ({ data }) => (\n  <div className=\"experience\">\n    <div className=\"link-to\" id=\"experience\" />\n    <div className=\"title\">\n      <h3>Experience</h3>\n    </div>\n    {data.map((job) => (\n      <Job\n        data={job}\n        key={job.company}\n      />\n    ))}\n  </div>\n);\n\nExperience.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    company: PropTypes.string,\n    position: PropTypes.string,\n    link: PropTypes.string,\n    daterange: PropTypes.string,\n    points: PropTypes.arrayOf(PropTypes.string),\n  })),\n};\n\nExperience.defaultProps = {\n  data: [],\n};\n\nexport default Experience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Course = ({ data, last }) => (\n  <li className=\"course-container\">\n    <a href={data.link}>\n      <h4 className=\"course-number\">{data.number}:</h4>\n      <p className=\"course-name\">{data.title}</p>\n    </a>\n    {!last && <div className=\"course-dot\"><p className=\"course-name\"> &#8226;</p></div>}\n  </li>\n);\n\nCourse.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  last: PropTypes.bool,\n};\n\nCourse.defaultProps = {\n  last: false,\n};\n\nexport default Course;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Course from './Courses/Course';\n\nconst getRows = (courses) => courses.sort((a, b) => {\n  let ret = 0;\n  if (a.university > b.university) ret = -1;\n  else if (a.university < b.university) ret = 1;\n  else if (a.number > b.number) ret = 1;\n  else if (a.number < b.number) ret = -1;\n  return ret;\n}).map((course, idx) => (\n  <Course\n    data={course}\n    key={course.title}\n    last={idx === courses.length - 1}\n  />\n));\n\nconst Courses = ({ data }) => (\n  <div className=\"courses\">\n    <div className=\"link-to\" id=\"ta courses\" />\n    <div className=\"title\">\n      <h3>TA Courses</h3>\n    </div>\n    <ul className=\"course-list\">\n      {getRows(data)}\n    </ul>\n  </div>\n);\n\nCourses.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    number: PropTypes.string,\n    link: PropTypes.string,\n    university: PropTypes.string,\n  })),\n};\n\nCourses.defaultProps = {\n  data: [],\n};\n\nexport default Courses;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Course from './Courses/Course';\n\nconst getRows = (courses) => courses.sort((a, b) => {\n  let ret = 0;\n  if (a.university > b.university) ret = -1;\n  else if (a.university < b.university) ret = 1;\n  else if (a.number > b.number) ret = 1;\n  else if (a.number < b.number) ret = -1;\n  return ret;\n}).map((course, idx) => (\n  <Course\n    data={course}\n    key={course.title}\n    last={idx === courses.length - 1}\n  />\n));\n\nconst Services = ({ data }) => (\n  <div className=\"courses\">\n    <div className=\"link-to\" id=\"program committees\" />\n    <div className=\"title\">\n      <h3>Program Committees</h3>\n    </div>\n    <ul className=\"course-list\">\n      {getRows(data)}\n    </ul>\n  </div>\n);\n\nServices.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    number: PropTypes.string,\n    link: PropTypes.string,\n    university: PropTypes.string,\n  })),\n};\n\nServices.defaultProps = {\n  data: [],\n};\n\nexport default Services;\n","const courses = [\n  {\n    title: 'Machine Learning',\n    number: 'CIS 520',\n    link: 'https://alliance.seas.upenn.edu/~cis520/wiki/',\n    university: 'Upenn',\n  },\n  {\n    title: 'Big Data Analytics',\n    number: 'CIS 545',\n    link: 'https://sites.google.com/seas.upenn.edu/cis545',\n    university: 'Upenn',\n  },\n];\n\nexport default courses;\n","const degrees = [\n  {\n    school: 'University of Pennsylvania',\n    degree: 'Ph.D. Computer and Information Scicence',\n    link: 'https://www.cis.upenn.edu/',\n    year: '2016 - Present',\n  },\n];\n\nexport default degrees;\n","const positions = [\n  {\n    company: 'Google AI',\n    position: 'Research Intern at Sicence Search',\n    link: '',\n    daterange: 'Jun. 2021 - Aug. 2021',\n    points: [\n      'Mentored by Natasha Noy and Omar Benjelloun',\n      'Worked on extracting studied variables from research papers for a given dataset.',\n    ],\n  },\n  {\n    company: 'Microsoft Research',\n    position: 'Research Intern at Knowledge Technologies and Intelligent Experiences Group (KTX)',\n    link: 'https://www.microsoft.com/en-us/research/group/ktx/',\n    daterange: 'Jun. 2020 - Aug. 2021',\n    points: [\n      'Mentored by Sujay Jauhar, Julia Kiseleva, and Ryen White.',\n      'Worked on understanding complex tasks based on multi-source information by developing novel query-focused text generation techniques.',\n    ],\n  },\n  {\n    company: 'Microsoft Corporation',\n    position: 'Research Intern at Cloud and Information Services Lab (Now Gray Systems Lab)',\n    link: 'https://www.microsoft.com/en-us/research/group/gray-systems-lab/',\n    daterange: 'June 2019 - Aug. 2019',\n    points: [\n      'Mentored by Fotis Psallidas, Alekh Jindal, and Carlo Curino.',\n      'Worked on constructing provenance graph from query logs.',\n    ],\n  },\n  {\n    company: 'IBM Research - Almaden',\n    position: 'Research Intern at Scalable Natural Language Processing Group',\n    link: 'https://researcher.watson.ibm.com/researcher/view_group.php?id=1264',\n    daterange: 'June 2018 - Aug. 2018',\n    points: [\n      'Mentored by Yannis Katsis, Marina Danilevsky, and Yunyao Li.',\n      'Worked on improving SystemT, a declarative IE system.',\n    ],\n  },\n];\n\nexport default positions;\n","const services = [\n  {\n    number: ' AAAI',\n    title: ' 2022, 2021, 2020',\n  },\n  {\n    number: 'ACL',\n    title: ' 2021, 2020',\n    // link: 'http://stanford.edu/class/ee364a/',\n    // university: 'Upenn',\n  },\n  {\n    number: ' IJCAI',\n    title: ' 2021 (SPC)',\n    // link: 'http://cs229.stanford.edu/',\n    // university: 'Upenn',\n  },\n  {\n    number: 'EMNLP',\n    title: ' 2019',\n  },\n];\nexport default services;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport Education from '../components/Resume/Education';\nimport Experience from '../components/Resume/Experience';\n// import Skills from '../components/Resume/Skills';\nimport Courses from '../components/Resume/Courses';\n// import References from '../components/Resume/References';\nimport Services from '../components/Resume/Services';\n\nimport courses from '../data/resume/courses';\nimport degrees from '../data/resume/degrees';\nimport positions from '../data/resume/positions';\nimport services from '../data/resume/services';\n// import { skills, categories } from '../data/resume/skills';\n\nconst sections = [\n  'Education',\n  'Experience',\n  'TA Courses',\n  'Program Committees',\n];\n\nconst Resume = () => (\n  <Main\n    title=\"Resume\"\n    description=\"Yi Zhang's Resume.\"\n  >\n    <article className=\"post\" id=\"resume\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\"><Link to=\"resume\">CV</Link></h2>\n          <div className=\"link-container\">\n            {sections.map((sec) => (\n              <h4 key={sec}>\n                <a href={`#${sec.toLowerCase()}`}>{sec}</a>\n              </h4>))}\n          </div>\n\n        </div>\n      </header>\n      <Education data={degrees} />\n      <Experience data={positions} />\n      <Courses data={courses} />\n      <Services data={services} />\n    </article>\n  </Main>\n);\n\nexport default Resume;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Job = ({ data }) => (\n  <article className=\"jobs-container\">\n    <header>\n      <h4><a href={data.link}>{data.company}</a> - {data.position}</h4>\n      <p className=\"daterange\"> {data.daterange}</p>\n    </header>\n    <ul className=\"points\">\n      {data.points.map((point) => (\n        <li key={point}>{point}</li>\n      ))}\n    </ul>\n  </article>\n);\n\nJob.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    company: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    daterange: PropTypes.string.isRequired,\n    points: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }).isRequired,\n};\n\nexport default Job;\n"],"sourceRoot":""}